(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{813:function(v,_,r){"use strict";r.r(_);var a=r(6),t=Object(a.a)({},(function(){var v=this,_=v.$createElement,r=v._self._c||_;return r("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[r("p",[v._v("计算机硬件组成")]),v._v(" "),r("p",[v._v("运算器、控制器")]),v._v(" "),r("p",[v._v("CPU")]),v._v(" "),r("ol",[r("li",[v._v("程序控制-最重要的功能通过执行指令来控制程序的执行顺序")]),v._v(" "),r("li",[v._v("操作控制")]),v._v(" "),r("li",[v._v("时间控制")]),v._v(" "),r("li",[v._v("数据处理-CPU最根本的任务就是数据的加工处理")])]),v._v(" "),r("p",[v._v("考点：")]),v._v(" "),r("p",[v._v("运算器：")]),v._v(" "),r("ol",[r("li",[v._v("算术逻辑单元ALU（实现对数据的算术和逻辑运算）")]),v._v(" "),r("li",[v._v("累加寄存器AC（运算结果或源操作数的存放器）")]),v._v(" "),r("li",[v._v("数据缓冲寄存器DR（暂时存放内存的指令或数据）")]),v._v(" "),r("li",[v._v("状态条件寄存器PSW（保存指令运行结果的条件码内容）")])]),v._v(" "),r("p",[v._v("控制器")]),v._v(" "),r("ol",[r("li",[v._v("指令寄存器IR（暂存CPU执行指令）")]),v._v(" "),r("li",[v._v("程序计数器PC（存放指令执行地址）")]),v._v(" "),r("li",[v._v("地址寄存器AR（保存当前CPU所访问的内存地址）")]),v._v(" "),r("li",[v._v("指令译码器ID（分析指令操作码）")])]),v._v(" "),r("p",[v._v("浮点数：表示方法N = F * 2^E E称为阶码, F称为尾数")]),v._v(" "),r("p",[v._v("浮点数所能表示的数值范围由阶码确定，所表示的数值精度由尾数确定")]),v._v(" "),r("p",[v._v("校验码：")]),v._v(" "),r("p",[v._v("码距: 从A码到B码转换所需要改变的位数称为码距"),r("br"),v._v("\n奇偶校验码："),r("br"),v._v("\n奇校验：含有奇数个1"),r("br"),v._v("\n偶校验：含有偶数个1")]),v._v(" "),r("p",[v._v("CRC：循环冗余校验码")]),v._v(" "),r("p",[v._v("只能检错，不能纠错")]),v._v(" "),r("p",[v._v("原始信息串10110"),r("br"),v._v("\nG(x) = x^4 + x + 1")]),v._v(" "),r("ol",[r("li",[v._v("在原始信息位添加0，在原始信息位添加多项式的阶 r，这里r为4，得到新串101100000")]),v._v(" "),r("li",[v._v("由多项式得到除数，多项中x的幂指数存在的位置1，不存在的位置0，例如x^0 = 1，存在1，那么得到1，x^1在多项式中存在，那么得到1，...，最终得到10011")]),v._v(" "),r("li",[v._v("将前两步得出的被除数和除数进行模2除法运算，亦或运算，都为1或者为0得到0，不同的则为1，")])]),v._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[v._v("101100000\n10011\n=\n001010000\n\n1010000\n10011\n=\n0011100\n\n11100\n10011\n=\n01111\n\n1111 => 余数\n")])]),v._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[v._v("1")]),r("br"),r("span",{staticClass:"line-number"},[v._v("2")]),r("br"),r("span",{staticClass:"line-number"},[v._v("3")]),r("br"),r("span",{staticClass:"line-number"},[v._v("4")]),r("br"),r("span",{staticClass:"line-number"},[v._v("5")]),r("br"),r("span",{staticClass:"line-number"},[v._v("6")]),r("br"),r("span",{staticClass:"line-number"},[v._v("7")]),r("br"),r("span",{staticClass:"line-number"},[v._v("8")]),r("br"),r("span",{staticClass:"line-number"},[v._v("9")]),r("br"),r("span",{staticClass:"line-number"},[v._v("10")]),r("br"),r("span",{staticClass:"line-number"},[v._v("11")]),r("br"),r("span",{staticClass:"line-number"},[v._v("12")]),r("br"),r("span",{staticClass:"line-number"},[v._v("13")]),r("br"),r("span",{staticClass:"line-number"},[v._v("14")]),r("br"),r("span",{staticClass:"line-number"},[v._v("15")]),r("br"),r("span",{staticClass:"line-number"},[v._v("16")]),r("br")])]),r("ol",{attrs:{start:"4"}},[r("li",[v._v("最终得到的余数为r，如果不够，那么往前加0，得到结果101101111")])]),v._v(" "),r("p",[v._v("海明码：利用奇偶性来检错和纠错的校验方法，2^(k-1)>=n+k"),r("br"),v._v("\n信息位除了2^n次外的位置")]),v._v(" "),r("p",[v._v("例如信息位1011的海明码")]),v._v(" "),r("p",[v._v("I4 I3 I2    I1"),r("br"),v._v("\n7  6  5  4  3  2  1  位数"),r("br"),v._v("\n1  0  1     1        信息位"),r("br"),v._v("\nr2    r1 r0 校验位")]),v._v(" "),r("p",[v._v("r2 = I4 ^ I3 ^ I2"),r("br"),v._v("\nr1 = I4 ^ I3 ^ I1"),r("br"),v._v("\nr0 = I4 ^ I2 ^ I1"),r("br"),v._v("\n就是二进制表示方法包含r所在的值")]),v._v(" "),r("p",[v._v("最终得出：")]),v._v(" "),r("p",[v._v("1010101")]),v._v(" "),r("p",[v._v("体系结构分类")]),v._v(" "),r("p",[v._v("按处理机的数量进行分类：单处理系统、并行处理系统、分布式处理系统")]),v._v(" "),r("p",[r("strong",[v._v("Flynn分类法")]),v._v("：指令流和数据流")]),v._v(" "),r("p",[v._v("单指令流单数据流：SISD"),r("br"),v._v("\n单指令流多数据流：SIMD"),r("br"),v._v("\n多指令流单数据流：MISD 不存在"),r("br"),v._v("\n多指令流多数据流：MIMD")]),v._v(" "),r("p",[v._v("指令：instruction"),r("br"),v._v("\n数据：data")]),v._v(" "),r("p",[v._v("计算机指令的组成：一条指令由操作码和操作数两部分组成"),r("br"),v._v("\n操作码决定要完成的操作，操作数指的是参与运算的数据及其所在的单元地址")]),v._v(" "),r("p",[v._v("计算机指令执行过程：取指令->分析指令->执行指令")]),v._v(" "),r("p",[v._v("指令寻址方式：顺序寻址方式、跳跃寻址方式")]),v._v(" "),r("p",[v._v("指令操作数的寻址方式：立即寻址方式、直接寻址方式、间接寻址方式、寄存器寻址方式、基址寻址方式、变址寻址方式")]),v._v(" "),r("p",[v._v("指令系统"),r("br"),v._v("\nCISC: 复杂指令系统 Complex instruction Set Computer  微程序控制系统"),r("br"),v._v("\nRISC：精简指令系统 Reduced instruction Set Computer 增加了通用寄存器 硬布线逻辑控制为主 适合采用流水线")]),v._v(" "),r("p",[v._v("指令流水线原理：将指令分成不同段，每段由不同的部分去处理")]),v._v(" "),r("p",[v._v("RISC中的流水线技术："),r("br"),v._v("\n超流水线技术（Super Pipe Line）"),r("br"),v._v("\n超标量（Super Scalar）技术"),r("br"),v._v("\n超长指令（Very Long Instruction Word, VLIW）技术")]),v._v(" "),r("p",[v._v("重点："),r("br"),v._v("\n流水线周期：指令分成不同执行段，其中执行时间最长的段为流水线周期"),r("br"),v._v("\n流水线执行时间：1条指令总执行时间+ (总指令条数-1)*流水线周期"),r("br"),v._v("\n流水线吞吐率计算：指令条数/流水线执行时间"),r("br"),v._v("\n流水线的加速比计算：不使用流水线执行时间/使用流水线执行时间")]),v._v(" "),r("h3",{attrs:{id:"存储系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#存储系统"}},[v._v("#")]),v._v(" 存储系统")]),v._v(" "),r("p",[v._v("计算机采用分级存储体系的主要目的是为了解决存储容量、成本和速度之间的矛盾问题"),r("br"),v._v("\n两级存储：Cache-主存、主存-辅存（虚拟存储体系）")]),v._v(" "),r("p",[v._v("局部性原理："),r("br"),v._v("\n时间局部性原理：在相邻的时间内会访问同一个数据项"),r("br"),v._v("\n空间局部性原理：相邻的空间地址会被连续访问")]),v._v(" "),r("p",[v._v("高速缓存Cache用来存储当前最活跃的程序和数据，直接与CPU交互，位于CPU和主存之间，容量小，速度为内存的5-10倍"),r("br"),v._v("\n地址映射：在CPU工作时，送出的是主存单元的地址，在Cache中需要将主存地址转换Cache存储器地址，由"),r("strong",[v._v("硬件自动完成映射")]),v._v("，分为三种方法")]),v._v(" "),r("p",[v._v("直接映射、全相连映射（随意一块都与Cache中任意一块对应）、组组相连映射")]),v._v(" "),r("p",[v._v("Cache替换算法：使Cache获得尽可能高的命中率"),r("br"),v._v("\n随机替换算法、先进先出算法、近期最少使用算法、优化替换算法")]),v._v(" "),r("p",[v._v("命中率及平均时间")]),v._v(" "),r("p",[v._v("1B = 8b")]),v._v(" "),r("p",[v._v("按字节编址B")]),v._v(" "),r("p",[v._v("磁盘结构和参数")]),v._v(" "),r("p",[v._v("磁盘由正反两个盘面，每个盘面由多个同心圆，每个同心圆是一个磁道，每一个同心圆又被划分为多个扇区，数据就被存放在一个一个扇区中")]),v._v(" "),r("p",[v._v("存取时间=寻道时间+等待时间")]),v._v(" "),r("p",[v._v("磁盘调度算法："),r("br"),v._v("\n先来先服务FCFS、最短寻道时间优先SSTF、扫描算法SCAN、单项扫描调度算法CSCAN")]),v._v(" "),r("h3",{attrs:{id:"输入输出技术"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#输入输出技术"}},[v._v("#")]),v._v(" 输入输出技术")]),v._v(" "),r("p",[v._v("内存与接口地址的编址方法")]),v._v(" "),r("ol",[r("li",[v._v("内存与接口地址独立编址方法")]),v._v(" "),r("li",[v._v("内存与接口地址统一编址方法")])]),v._v(" "),r("p",[v._v("计算机和外设间的数据交互方式")]),v._v(" "),r("p",[v._v("考点"),r("br"),v._v("\n程序控制（查询）方式：CPU主动查询外设是否完成数据传输，效率极低"),r("br"),v._v("\n程序中断方式：外设完成数据传输后，向CPU发送中断"),r("br"),v._v("\nDMA方式（直接主存存取）：数据传输的整个过程都由DMA控制器来完成，在主存和外设之间建立直接的数据通路，效率很高")]),v._v(" "),r("p",[v._v("在一个"),r("strong",[v._v("总线周期")]),v._v("结束后，CPU会响应DMA请求开始读取数据；CPU响应程序中断方式请求是在"),r("strong",[v._v("一条指令")]),v._v("执行结束时")]),v._v(" "),r("h3",{attrs:{id:"总线结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总线结构"}},[v._v("#")]),v._v(" 总线结构")]),v._v(" "),r("p",[v._v("总线：计算机设备和设备之前传输信息的公共数据通道。总线是连接计算机硬件系统内多种设备的通信线路，它的一个重要特征是由总线上的所有设备共享")]),v._v(" "),r("p",[v._v("总线类别："),r("s",[v._v("内部总线（芯片）、系统总线（数据总线、地址总线、控制总线）、外部总线（外部USB）")])]),v._v(" "),r("p",[v._v("考点：数据总线、地址总线、控制总线")]),v._v(" "),r("p",[v._v("串行总线适应长距离数据传输，并行总线适合短距离数据传输")]),v._v(" "),r("p",[v._v("计算机可靠性"),r("br"),v._v("\n平均无故障时间MTTF=1/失效率"),r("br"),v._v("\n平均故障修复时间MTTR=1/修复率"),r("br"),v._v("\n平均故障间隔时间MTBF=MTTF+MTTR"),r("br"),v._v("\n系统可用性")]),v._v(" "),r("p",[v._v("重点："),r("br"),v._v("\n串并联系统可靠性："),r("br"),v._v("\n串联系统可靠性：R=R1"),r("em",[v._v("R2")]),v._v("..."),r("em",[v._v("Rn"),r("br"),v._v("\n并联系统可靠性：R=1-(1-R1)")]),v._v("(1-R2)"),r("em",[v._v("...")]),v._v("(1-Rn)")]),v._v(" "),r("p",[v._v("了解概念就行"),r("br"),v._v("\nN模冗余系统：")]),v._v(" "),r("h2",{attrs:{id:"错题总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#错题总结"}},[v._v("#")]),v._v(" 错题总结")]),v._v(" "),r("ol",[r("li",[v._v("计算机CPU对其访问速度最快的是：CPU内部通用寄存器>Cache>主存储器>联机磁盘存储器>脱机光盘、磁盘存储器")]),v._v(" "),r("li",[v._v("n位二进制数可以表示2^n个数值，补码中因为0只有一种，那么就有2^n个数值")]),v._v(" "),r("li",[r("strong",[v._v("中断响应时间")]),v._v("指的是从发出中断请求到开始进入中断处理程序；"),r("strong",[v._v("中断处理时间")]),v._v("指的是从中断处理开始到中断处理结束时间；"),r("strong",[v._v("中断向量")]),v._v("提供中断服务程序的入口地址")]),v._v(" "),r("li",[v._v("流水线是一种同步控制机制")]),v._v(" "),r("li",[v._v("两级存储：Cache-主存、主存-辅存（虚拟存储体系）")]),v._v(" "),r("li",[v._v("CPU依据"),r("strong",[v._v("指令周期的不同阶段")]),v._v("来区分二进制的指令和数据")]),v._v(" "),r("li",[v._v("内存容量需要+1")])]),v._v(" "),r("h2",{attrs:{id:"操作系统知识"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#操作系统知识"}},[v._v("#")]),v._v(" 操作系统知识")]),v._v(" "),r("p",[v._v("进程管理、存储管理、设备管理、文件管理、作业管理（这个不考）")]),v._v(" "),r("p",[v._v("操作系统的4个特征：并发性、共享性、虚拟性和不确定性")]),v._v(" "),r("p",[v._v("操作系统的分类：批处理操作系统、分时操作系统、实时操作系统、网络操作系统、分布式操作系统、微型计算机操作系统（简称微机操作系统，如Windows、Mac OS、Linux）")]),v._v(" "),r("p",[v._v("嵌入式操作系统的主要特点：微型化、可定制、实时性、可靠性、易移植性"),r("br"),v._v("\n嵌入式系统初始化按照自底向上、从硬件到软件的次序依次为片级初始化->板级初始化->系统级初始化")]),v._v(" "),r("p",[v._v("进程的组成：进程控制块PCB process control block、程序、数据")]),v._v(" "),r("p",[v._v("前驱图的特点：任务间的并行、任务间的先后顺序"),r("br"),v._v("\n进程资源图：进程和资源之间的分配和请求关系 P代表进程、R代表资源")]),v._v(" "),r("p",[v._v("所有进程都是阻塞节点时，即陷入死锁状态")]),v._v(" "),r("p",[v._v("进程的同步与互斥")]),v._v(" "),r("p",[v._v("临界资源：各进程间需要以互斥方式对其进行访问的资源"),r("br"),v._v("\n临界区：指进程中对临界资源实施操作的那段程序")]),v._v(" "),r("p",[v._v("互斥：某资源在同一个时间内只能由一个任务单独使用，使用时需要加锁，使用完后解锁才能被其他任务使用"),r("br"),v._v("\n同步：多个任务可以并发执行，只不过有速度上的差异，在一定情况下停下等待，不存在资源是否单独或共享的问题")]),v._v(" "),r("p",[v._v("互斥信号量：对临界资源采用互斥访问，使用互斥信号量后其他进程无法访问，"),r("strong",[v._v("初值为1")]),r("br"),v._v("\n同步信号量：对共享资源的访问控制，"),r("strong",[v._v("初值一般是共享资源的数量")])]),v._v(" "),r("p",[v._v("P操作：申请资源，S=S-1，若S>=0则继续执行，若S<0，则置该进程为阻塞状态，并将其插入阻塞队列"),r("br"),v._v("\nV操作：释放资源，S=S+1，若S>0值继续执行，若S<=0，则从阻塞状态唤醒一个进程")]),v._v(" "),r("h3",{attrs:{id:"进程调度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进程调度"}},[v._v("#")]),v._v(" 进程调度")]),v._v(" "),r("p",[v._v("进程调度方式是指当有更高优先级的进程到来时分配CPU。分为可剥夺和不可剥夺两种")]),v._v(" "),r("p",[v._v("高级调度：处于输入池中的哪个后背作业可以调入主系统做好运行的准备"),r("br"),v._v("\n中级调度：处于交换区中的哪个就绪进程可以调入内存"),r("br"),v._v("\n低级调度：决定处于内存中的哪个就绪进程可以占用CPU")]),v._v(" "),r("p",[v._v("调度算法：先来先服务FCFS、时间片轮转、优先级调度、多级反馈调度")]),v._v(" "),r("p",[v._v("死锁：资源互斥、每个进程占有资源并等待其他资源、系统不能剥夺进程资源、进程资源图是一个环路")]),v._v(" "),r("p",[v._v("解决方法：死锁预防、死锁避免、死锁检测、死锁解除")]),v._v(" "),r("p",[v._v("死锁资源计算：系统内有n个经常，每个进程都需要R个资源，其发生死锁的最大资源数为n(R-1)，不发生死锁的最小资源数n*(R-1)+1")]),v._v(" "),r("p",[v._v("传统的进程：可拥有资源的独立资源；可独立调度和分配的基本单位")]),v._v(" "),r("p",[v._v("线程：线程作为调度和分配的基本单元，进程作为独立分配资源的单元")]),v._v(" "),r("p",[v._v("分区存储管理：分区存储组织，就是"),r("strong",[v._v("整存")]),v._v("，将某进程运行所需的内存整体一起分配给它，固定分区、可变分区、可重定位分区")]),v._v(" "),r("p",[v._v("分页存储管理")]),v._v(" "),r("p",[v._v("逻辑页分为页号和页内地址")]),v._v(" "),r("p",[v._v("优点：利用率高，碎片小，分配及管理简单"),r("br"),v._v("\n缺点：增加了系统开销，可能产生抖动现象")]),v._v(" "),r("p",[v._v("页面置换算法：最优算法OPT、先进先出算法FIFO(会产生抖动现象)、最近最少使用LRU、淘汰原则")]),v._v(" "),r("p",[v._v("快表：是一块小容量的相互存储器，由快速存储器组成，按内容访问，速度快，并且可以从硬件上保证按内容并行查找，一般用来存放当前访问最频繁的少数活动页面的页号，快表是将页表存在Cache中")]),v._v(" "),r("p",[v._v("分段存储管理")]),v._v(" "),r("p",[v._v("将进程空间分为一个个段，每段也有段号和段内地址")]),v._v(" "),r("p",[v._v("优点：多道程序共享内存，各段程序修改互不影响"),r("br"),v._v("\n缺点：内存利用率低，内存碎片浪费大")]),v._v(" "),r("p",[v._v("段页式存储管理：对进程空间先分段后分页，没考过")]),v._v(" "),r("p",[v._v("优点：空间浪费小、存储共享容易、存储保护容易、能动态链接"),r("br"),v._v("\n缺点：复杂")]),v._v(" "),r("h3",{attrs:{id:"设备管理概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设备管理概述"}},[v._v("#")]),v._v(" 设备管理概述")]),v._v(" "),r("p",[v._v("设备是计算机系统与外界交互的工具，具体负责计算机与外部的输入/输出工作，所以常称为外部设备（简称外设）")]),v._v(" "),r("p",[v._v("设备的分类：按数据组织分类（块设备、字符设备）、按照设备功能分类（输入设备、输出设备、存储设备、供电设备）、资源分配角度分类、数据传输速率分配")]),v._v(" "),r("p",[v._v("设备管理的主要功能是动态地掌握并记录设备的状态")]),v._v(" "),r("p",[v._v("I/O设备")]),v._v(" "),r("p",[v._v("用户进程、设备无关软件、设备驱动程序、中断处理程序、硬件")]),v._v(" "),r("p",[v._v("设备管理技术")]),v._v(" "),r("p",[v._v("引入SPOOLING（外围设备联机操作）技术，就是在外设上建立两个数据缓冲区")]),v._v(" "),r("p",[v._v("文件管理概述")]),v._v(" "),r("p",[v._v("文件的逻辑结构可以分为两大类：有结构的记录式文件；无结构的流式文件")]),v._v(" "),r("p",[v._v("索引文件结构：直接索引对应物理盘块")]),v._v(" "),r("p",[v._v("索引块计算索引块的个数，磁盘数据块大小计算文件长度")]),v._v(" "),r("h3",{attrs:{id:"文件目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#文件目录"}},[v._v("#")]),v._v(" 文件目录")]),v._v(" "),r("p",[v._v("文件控制块的有序集合称为文件目录")]),v._v(" "),r("p",[v._v("相对路径前面不需要"),r("code",[v._v("/")])]),v._v(" "),r("h3",{attrs:{id:"文件存储空间管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#文件存储空间管理"}},[v._v("#")]),v._v(" 文件存储空间管理")]),v._v(" "),r("p",[v._v("文件的存取方法是指读/写文件存储器上的一个物理块的方法，通常有顺序存取和随机存取")]),v._v(" "),r("p",[v._v("位示图 每一位对应文件存储器上的一个物理块，取值0和1分别表示空闲和占用")]),v._v(" "),r("h2",{attrs:{id:"数据库技术基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据库技术基础"}},[v._v("#")]),v._v(" 数据库技术基础")]),v._v(" "),r("h3",{attrs:{id:"三级模式-两级映射"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三级模式-两级映射"}},[v._v("#")]),v._v(" 三级模式-两级映射")]),v._v(" "),r("p",[v._v("内模式：管理如何存储物理的数据，对应具体物理存储文件"),r("br"),v._v("\n模式：又称为概念模式，就是我们通常使用的基本表，根据应用、需求将物理数据划分成一张张表"),r("br"),v._v("\n外模式：对应数据库中的视图这个级别，将表进行一定处理后再提供给用户使用")]),v._v(" "),r("p",[v._v("外模式-模式映像：是表和视图之间的映射，存在于概念和外部级之间，若表中数据发生了修改，只需要修改此映射，而无需修改应用程序"),r("br"),v._v("\n模式-内模式映像：是表和数据的物理存储之间的映射，存在于概念级和内部级之间，若修改了数据存储方式，只需要修改此映射，而无需修改应用程序")]),v._v(" "),r("h3",{attrs:{id:"数据库设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计"}},[v._v("#")]),v._v(" 数据库设计")]),v._v(" "),r("p",[v._v("需求分析->概念结构设计->逻辑结构设计->物理设计")]),v._v(" "),r("p",[v._v("需求分析：即分析数据存储的要求，产出物有数据流图、数据字典、需求说明书"),r("br"),v._v("\n概念结构设计：设计E-R图，实体-联系图"),r("br"),v._v("\n逻辑结构设计：将E-R图转换成关系模式"),r("br"),v._v("\n物理设计：根据生成的表等概念，生成物理数据库")]),v._v(" "),r("h3",{attrs:{id:"数据模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据模型"}},[v._v("#")]),v._v(" 数据模型")]),v._v(" "),r("p",[v._v("关系模型是二维表的形式表示的实体-联系模型"),r("br"),v._v("\n概念模型是从用户的角度进行建模的")]),v._v(" "),r("p",[v._v("数据模型的三要素：数据结构、数据操作、数据的约束条件")]),v._v(" "),r("p",[v._v("椭圆表示属性、长方形表示实体、菱形表示联系、联系的两端要填写联系关系")]),v._v(" "),r("p",[v._v("实体：客观存在并相互区别的事务"),r("br"),v._v("\n弱实体和强实体：弱实体依赖强实体的存在而存在（两个杠）")]),v._v(" "),r("p",[v._v("E-R模型转换为关系模型：每个实体都对应一个关系模型")]),v._v(" "),r("p",[v._v("1:N的联系中，在N端中加入1端实体的主键"),r("br"),v._v("\nM:N的联系中，必须作为一个单独的关系模式，主键是M和N端的联合主键")]),v._v(" "),r("h3",{attrs:{id:"关系代数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关系代数"}},[v._v("#")]),v._v(" 关系代数")]),v._v(" "),r("p",[v._v("并："),r("br"),v._v("\n交："),r("br"),v._v("\n差：S1-S2，结果是S1表中有而S2中没有")]),v._v(" "),r("p",[v._v("笛卡尔积：S1 * S2，合并"),r("br"),v._v("\n投影：按条件选择某关系模式中的某列，列也可以用数字表示π"),r("br"),v._v("\n选择：实际是按条件选择某关系模式中的某条记录σ"),r("br"),v._v("\n自然连接的结果显示全部的属性列，但是相同属性列只显示一次，显示两个关系模式中属性相同且值相同的记录 符号类似▷◁")]),v._v(" "),r("h3",{attrs:{id:"函数依赖"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数依赖"}},[v._v("#")]),v._v(" 函数依赖")]),v._v(" "),r("p",[v._v("给定一个X，能唯一确定一个Y")]),v._v(" "),r("p",[v._v("部分函数依赖：A->C、(A,B)->C"),r("br"),v._v("\n传递函数依赖：A->B, B->C => A->C")]),v._v(" "),r("p",[v._v("函数依赖的公理系统(Armstrong)"),r("br"),v._v("\n设关系模式R<U, F>, U是关系模式R的属性全集，F是关系模式R的一个函数依赖集")]),v._v(" "),r("p",[v._v("超键（能唯一标识此表的属性的组合）、候选键（超键中去除冗余的属性，剩余的属性就是候选键）、主键(码)（任选一个候选键）、外键（其他表中的主键）、主属性（候选键内的属性为主属性）")]),v._v(" "),r("p",[v._v("实体完整性约束、参照完整性约束、用户自定义完整性约束")]),v._v(" "),r("h3",{attrs:{id:"范式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#范式"}},[v._v("#")]),v._v(" 范式")]),v._v(" "),r("p",[v._v("第一范式1NF：关系中的每一个分量必须是一个不可分的数据项，"),r("strong",[v._v("不允许")]),v._v("有小表的存在")]),v._v(" "),r("p",[v._v("第二范式2NF：如果关系R属于1NF，且每一个非主属性完全函数依赖于任何一个候选码，简而言之就是表中的每一个非主属性不会依赖复合主键中的某一个列")]),v._v(" "),r("p",[v._v("第三范式3NF：在满足1NF的基础上，表中不存在非主属性对码的传递依赖")]),v._v(" "),r("p",[v._v("BC范式BCNF，是指在第三范式的基础上进一步消除主属性对于码的部分函数依赖和传递依赖。通俗的来说，就是在每一种情况下，每一个依赖的左边决定因素都必然包含候选键")]),v._v(" "),r("p",[v._v("从未在右边出现过的属性，必然是候选键之一，以该属性为基础，根据依赖集依次拓展")]),v._v(" "),r("h3",{attrs:{id:"模式分解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#模式分解"}},[v._v("#")]),v._v(" 模式分解")]),v._v(" "),r("p",[v._v("范式之间的转换一般都是通过拆分属性，即模式分解")]),v._v(" "),r("p",[v._v("保持函数依赖的判断：")]),v._v(" "),r("p",[v._v("如果F上的每一个函数依赖都在其分解后的某一个关系成立，则这个分解是保持依赖的")]),v._v(" "),r("p",[v._v("无损分解：分解后的关系模式能够还原出原关系模式就是分解"),r("br"),v._v("\n如果R的分解为P={R1, R2}， R1∩R2->(R1-R2)或者R1∩R2->(R2-R1)"),r("br"),v._v("\n当分解为三个以及以上关系模式时，可以通过表格法求解")]),v._v(" "),r("h3",{attrs:{id:"并发控制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#并发控制"}},[v._v("#")]),v._v(" 并发控制")]),v._v(" "),r("p",[v._v("事务：有一系列操作组成，要么全做要么全不做，拥有四种特性：原子性、一致性、隔离性、持续性")]),v._v(" "),r("p",[v._v("事务是并发控制的前提条件，并发控制就是控制不同的事务并发执行，但并发控制中存在下面三个问题：")]),v._v(" "),r("p",[v._v("丢失更新、不可重复读、读脏数据")]),v._v(" "),r("h3",{attrs:{id:"封锁协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#封锁协议"}},[v._v("#")]),v._v(" 封锁协议")]),v._v(" "),r("p",[v._v("X锁是排它锁(写锁)、S锁是共享锁(读锁)")]),v._v(" "),r("p",[v._v("三级封锁协议：一级解锁协议（修改数据R之前必须对其加X锁）、二级封锁协议（在读数据R之前必须对其加S锁）、三级封锁协议")]),v._v(" "),r("h3",{attrs:{id:"数据库安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据库安全"}},[v._v("#")]),v._v(" 数据库安全")]),v._v(" "),r("p",[v._v("静态转储：即冷备份"),r("br"),v._v("\n动态存储：即热备份")]),v._v(" "),r("h3",{attrs:{id:"分布式数据库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式数据库"}},[v._v("#")]),v._v(" 分布式数据库")]),v._v(" "),r("h3",{attrs:{id:"数据仓库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据仓库"}},[v._v("#")]),v._v(" 数据仓库")]),v._v(" "),r("p",[v._v("面向主题、集成的、非易失的、且随时间变化的数据集合")]),v._v(" "),r("p",[v._v("数据仓库的结构通常包含四个层次：数据源、数据的存储与管理（核心）、OLAP(联机分析处理)服务器、前端工具")]),v._v(" "),r("p",[v._v("商业智能(BI): 数据预处理、建立数据仓库、数据分析和数据、展现")]),v._v(" "),r("h3",{attrs:{id:"反规范化技术"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#反规范化技术"}},[v._v("#")]),v._v(" 反规范化技术")]),v._v(" "),r("h3",{attrs:{id:"大数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#大数据"}},[v._v("#")]),v._v(" 大数据")]),v._v(" "),r("p",[v._v("特点：大量化、多样化、价值密度低、快速化")]),v._v(" "),r("h3",{attrs:{id:"sql"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sql"}},[v._v("#")]),v._v(" SQL")]),v._v(" "),r("p",[v._v("create table"),r("br"),v._v("\n指定主键：primary key()"),r("br"),v._v("\n指定外键：foreign key()"),r("br"),v._v("\n视图：view")]),v._v(" "),r("p",[v._v("select ... from ... where"),r("br"),v._v("\n分组查询：group by"),r("br"),v._v("\n更名运算：as"),r("br"),v._v("\n字符串匹配: like"),r("br"),v._v("\n数据库插入: insert into .... values()"),r("br"),v._v("\n数据库删除: delete from ... where"),r("br"),v._v("\n数据库修改: update ... set ... where"),r("br"),v._v("\n排序: order by 默认升序，降序加关键字DESC"),r("br"),v._v("\nDISINCT: 过滤重复的选项")]),v._v(" "),r("h2",{attrs:{id:"计算机网络"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络"}},[v._v("#")]),v._v(" 计算机网络")]),v._v(" "),r("h3",{attrs:{id:"网络功能和分类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络功能和分类"}},[v._v("#")]),v._v(" 网络功能和分类")]),v._v(" "),r("p",[v._v("计算机网络的功能：数据通信、资源共享、负载均衡、高可靠性")]),v._v(" "),r("p",[v._v("计算机网络按分布范围和拓扑结构划分如下图所示: 局域网LAN、城域网MAN、广域网WAN")]),v._v(" "),r("p",[v._v("OSI七层模型：物理层、数据链路层、网络层、传输层、会话层、表示层、应用层")]),v._v(" "),r("p",[v._v("物理层：在链路上透明地传输位 单位：比特 设备：中继器、集线器"),r("br"),v._v("\n数据链路层：把不可靠的信道变为可靠的信道，差错控制，流量控制等 单位：帧  设备：交换器、网桥"),r("br"),v._v("\n网络层：进行路由选择、拥塞控制、顺序控制、传送包，保证报文的正确性，又称通信子网层 单位：IP分组  设备：路由器"),r("br"),v._v("\n传输层：提供端对端间可靠性、透明的数据传输，保证报文顺序的正确性、数据的完整性 单位：报文段 设备：网关"),r("br"),v._v("\n会话层：建立通信进程的逻辑名字与物理名字之间的联系，提供进程之间建立、管理和终止会话的方法，处理同步与恢复问题"),r("br"),v._v("\n表示层：实现数据转换（包括格式转换、压缩、加密等）  设备：网关"),r("br"),v._v("\n应用层：对用户不透明的提供各种服务 单位：数据  设备：网关")]),v._v(" "),r("p",[v._v("以太网规范IEEE 802.3 是重要的局域网协议，包括")]),v._v(" "),r("p",[v._v("IEEE 802.3  标准以太网  10Mb/s  传输介质为细同轴电缆"),r("br"),v._v("\nIEEE 802.3u 快速以太网  100Mb/s 双绞线"),r("br"),v._v("\nIEEE 802.3z 千兆以太网  1000Mb/s 光纤或双绞线"),r("br"),v._v("\nIEEE 802.3ae 万兆以太网  10Gb/s  光纤")]),v._v(" "),r("p",[v._v("无线局域网WLAN技术标准：IEEE 802.11")]),v._v(" "),r("p",[v._v("广域网协议包括：PPP 点对点协议，ISDN 综合业务数字网、xDSL、DDN数字专线")]),v._v(" "),r("h3",{attrs:{id:"tcp-ip协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip协议"}},[v._v("#")]),v._v(" TCP/IP协议")]),v._v(" "),r("p",[v._v("网络协议三要素：语法、语义、时序。")]),v._v(" "),r("p",[v._v("网络层协议："),r("br"),v._v("\nIP: 网络层最重要的核心协议，在源地址和目的地址之间传送数据报，无连接、不可靠"),r("br"),v._v("\nICMP: 因特网控制报文协议"),r("br"),v._v("\nARP和RARP: 地址解析协议，ARP是将IP地址转化为物理地址，RARP是将物理地址转化为IP地址"),r("br"),v._v("\nIGMP: 网络组管理协议")]),v._v(" "),r("p",[v._v("传输层协议："),r("br"),v._v("\nTCP: 整个TCP/IP协议族中最重要的协议之一"),r("br"),v._v("\nUDP: 是一种不可靠、无连接的协议，有助于提高传输速率")]),v._v(" "),r("p",[v._v("应用层协议："),r("br"),v._v("\n可靠协议：FTP、HTTP(80)、SMTP(简单邮件发送协议25)、POP3(110)等都是可靠协议")]),v._v(" "),r("p",[v._v("不可靠协议：TFTP、SNMP（简单网络管理协议）、DHCP(67、68)、DNS(53)")]),v._v(" "),r("h3",{attrs:{id:"传输介质"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#传输介质"}},[v._v("#")]),v._v(" 传输介质")]),v._v(" "),r("p",[v._v("双绞线：无屏蔽双绞线UTP、屏蔽双绞线STP")]),v._v(" "),r("p",[v._v("光纤："),r("br"),v._v("\n多模光纤MMF：同时传输多种不同的信号，采用发光二极管LED为光源，成本低，但是传输的效率和可靠性都较低，适合短距离传输"),r("br"),v._v("\n单模光纤SMF：一般只能传输一种信号，采用激光二极管LD作为光源，并且只支持激光信号的传播，成本高，但是传输距离远，可靠性高")]),v._v(" "),r("p",[v._v("无线信道：分为无线电波和红外光波")]),v._v(" "),r("p",[v._v("通信方式：单工、半双工、全双工")]),v._v(" "),r("p",[v._v("同步方式："),r("br"),v._v("\n异步传输、同步传输、串行传输、并行传输")]),v._v(" "),r("h3",{attrs:{id:"通信方式和交互方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通信方式和交互方式"}},[v._v("#")]),v._v(" 通信方式和交互方式")]),v._v(" "),r("p",[v._v("交换方式")]),v._v(" "),r("p",[v._v("电路交换：在两方之间建立一个专用电路，特点是面向连接、实时性高、链路利用率低"),r("br"),v._v("\n报文交换：以报文为单位，存储转发模式，收到数据后先存储，进行差错校验，有错误会丢弃，因此会有延时，但可靠性高，是面向无连接的")]),v._v(" "),r("p",[v._v("分组交换：以分组为单位，也是存储转发模式，分为三种方式："),r("br"),v._v("\n数据报：各个分组携带地址信息，自由的选择不同的路由路径"),r("br"),v._v("\n虚电路：二者之间就建立了一个虚拟的通信线路"),r("br"),v._v("\n信元交换：异步传输模式ATM采用的交换方式，信元是固定长度的分组")]),v._v(" "),r("h3",{attrs:{id:"ip地址表示"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ip地址表示"}},[v._v("#")]),v._v(" IP地址表示")]),v._v(" "),r("p",[v._v("分类IP地址：这32位IP地址分为网络号和主机号，根据网络号位数的不同，可以将IP地址分为下面几类")]),v._v(" "),r("p",[v._v("A类：0.0.0.0-127.255.255.255  主机号为24位，网络号为8位，根据主机位，一共有2^24 - 2(不为1或0)，0开头"),r("br"),v._v("\nB类：128.0.0.0-191.255.255.255 主机号为16位，网络号为16位，根据主机位，一共有2^16 - 2(不为1或0)，10开头"),r("br"),v._v("\nC类：192.0.0.0-223.255.255.255 主机号为8位，网络号为24位，根据主机位，一共有2^8 - 2(不为1或0)，110开头"),r("br"),v._v("\nD类(组播): 224.0.0.0-239.255.255.255"),r("br"),v._v("\nE类(保留): 240.0.0.0-255.255.255.255")]),v._v(" "),r("p",[v._v("无分类编址：即不按照A B C规则，自动规定网络号 IP地址/网络号  例如128.168.0.11/20，网络号20位，那么主机号占32-20=12位，也可以划分子网")]),v._v(" "),r("p",[v._v("特殊IP地址"),r("br"),v._v("\n公有地址：通过它直接访问因特网。是全网唯一的IP地址"),r("br"),v._v("\n私有地址：非注册地址，专门为组织机构内部使用 A 10.0.0.0~10.255.255.255  B 172.16.0.0~172.31.255.255  C 192.168.0.0~192.168.255.255"),r("br"),v._v("\n其他特殊地址：主机号全1时代表广播地址")]),v._v(" "),r("h3",{attrs:{id:"子网划分"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#子网划分"}},[v._v("#")]),v._v(" 子网划分")]),v._v(" "),r("p",[v._v("自定义网络位数，也就是自定义主机位数")]),v._v(" "),r("p",[v._v("IP地址：网络号+子网号+主机号")]),v._v(" "),r("p",[v._v("将主机号拿出几位作为子网号")]),v._v(" "),r("p",[v._v("网络号和子网号都为1，主机号都为0，这样的地址为子网掩码"),r("br"),v._v("\n子网号可以全为0和全1，主机号不能为全0或全1，因此，主机数需要-2")]),v._v(" "),r("p",[v._v("还可以聚合网络为超网，将网络号取出几位作为主机号")]),v._v(" "),r("h3",{attrs:{id:"ipv6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ipv6"}},[v._v("#")]),v._v(" IPv6")]),v._v(" "),r("p",[v._v("IPv6地址长度为128位，地址空间增大了2^96倍")]),v._v(" "),r("p",[v._v("4和6的过渡期间，主要采用三种基本技术："),r("br"),v._v("\n双协议栈：主机同时运行4和6两套协议栈"),r("br"),v._v("\n隧道技术：在IPv4网络之上建立一条能够传输IPv6数据报的隧道"),r("br"),v._v("\n翻译技术：利用一台专门的翻译设备，在纯IPv4和纯IPv6网络之间转换IP报头的地址，还能透明通信")]),v._v(" "),r("h3",{attrs:{id:"网络规划与设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络规划与设计"}},[v._v("#")]),v._v(" 网络规划与设计")]),v._v(" "),r("p",[v._v("三层模型：核心层、汇聚层和接入层"),r("br"),v._v("\n核心层：提供不同区域之间的最佳路由和高速数据传送"),r("br"),v._v("\n汇聚层：将网络业务连接到接入层，并且实施与安全、流量、负载和路由相关的策略"),r("br"),v._v("\n接入层：为用户提供了在本地网段访问应用系统的能力，解决相邻用户之间的互访需要，负责一些用户信息的收集工作和用户管理功能")]),v._v(" "),r("p",[v._v("建筑物综合布线系统PDS")]),v._v(" "),r("ol",[r("li",[v._v("工作区子系统：实现工作区终端设备到水平子系统的信息插座之间的互联")]),v._v(" "),r("li",[v._v("水平布线子系统：实现信息插座和管理子系统之间的连接")]),v._v(" "),r("li",[v._v("设备间子系统：实现中央主配线架与各种不同设备之间的连接")]),v._v(" "),r("li",[v._v("垂直干线子系统：实现各楼层设备间子系统之间的互连")]),v._v(" "),r("li",[v._v("管理子系统：连接各楼层水平布线子系统和垂直干缆线，负责连接控制其他子系统为连接其他子系统提供连接手段")]),v._v(" "),r("li",[v._v("建筑群子系统：各个建筑物通信系统之间的互联")])]),v._v(" "),r("h3",{attrs:{id:"磁盘冗余陈列技术"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#磁盘冗余陈列技术"}},[v._v("#")]),v._v(" 磁盘冗余陈列技术")]),v._v(" "),r("p",[v._v("RAID即磁盘冗余陈列技术，将数据分散存储在不同磁盘中，并并行读取，可冗余存储，提高磁盘访问速度，保障数据安全性")]),v._v(" "),r("h3",{attrs:{id:"网络存储技术"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络存储技术"}},[v._v("#")]),v._v(" 网络存储技术")]),v._v(" "),r("p",[v._v("直接附加存储(DAS)：将存储设备通过SCSI接口直接连接到一台服务器上使用"),r("br"),v._v("\n网络附加存储(NAS)：通过网络接口与网络直接相连，由用户通过网络访问，有独立的存储系统，特点是进行小文件级的共享存取；支持即插即用，但难以获得满意的性能"),r("br"),v._v("\n存储区域网(SAN): 采用块级别存储，根据数据传输过程采用的协议，其技术划分为FC SAN、IP SAN和IB SAN技术")]),v._v(" "),r("p",[v._v("网络地址翻译(NAT)：少量IP地址集合的过程称为NAT"),r("br"),v._v("\n默认网关: 默认网关的IP地址必须与本机IP地址在同一网段内"),r("br"),v._v("\n虚拟局域网VLAN：VLAN工作在OSI参考模型的第二层和第三层，一个VLAN就是一个广播域，VLAN之间的通信是通过第三层的路由器来完成的"),r("br"),v._v("\n虚拟专用网VPN："),r("br"),v._v("\nPPP：安全认证介绍"),r("br"),v._v("\n冲突域和广播域：路由器可以阻断广播域和冲突域，交换机只能阻断冲突域，因此一个路由器下可以划分多个广播域和冲突域，一个交换机下整体是一个广播域，但可以划分多个冲突域；而物理层设备集线器下整体作为一个冲突域和一个广播域")]),v._v(" "),r("h2",{attrs:{id:"信息安全和信息系统安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#信息安全和信息系统安全"}},[v._v("#")]),v._v(" 信息安全和信息系统安全")]),v._v(" "),r("p",[v._v("信息系统的安全空间：X、Y、Z三个轴形成的信息安全系统三维空间，X轴是安全机制，Y轴是OSI网络参考模型，Z轴是安全服务")]),v._v(" "),r("p",[v._v("安全空间的五大属性（要素）：认证、权限、完整、加密和不可否认")]),v._v(" "),r("p",[v._v("信息安全含义及属性：保护信息的保密性、完整性、可用性，另外也包括其他属性，如真实性、可核查行、不可抵赖性和可靠性")]),v._v(" "),r("p",[v._v("保密性：信息不被泄露给未授权的个人、实体和过程或不被其使用的特性，包括最小授权原则、防暴露、信息加密、物理保密")]),v._v(" "),r("p",[v._v("完整性：信息未经授权不能改变的特性。保证完整性的方法包括：协议、纠错编码方法、密码校验和方法、数字签名、公证")]),v._v(" "),r("p",[v._v("可用性：需要时，授权实体可以访问和使用的特性")]),v._v(" "),r("p",[v._v("安全需求：物理线路安全（物理设备、物理环境）、网络安全（网络上的攻击、入侵）、系统安全（操作系统漏洞）、应用安全（上层的应用软件，包括数据库软件）")]),v._v(" "),r("h3",{attrs:{id:"信息安全技术"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#信息安全技术"}},[v._v("#")]),v._v(" 信息安全技术")]),v._v(" "),r("p",[v._v("加密技术")]),v._v(" "),r("p",[v._v("对称加密技术：数据的加密和解密的密钥是相同的，属于不公开密钥加密算法，缺点是加密强度不高，且密钥分发困难。优点是加密速度快，适合加密大数据。")]),v._v(" "),r("p",[v._v("常见的对称密钥加密算法"),r("br"),v._v("\nDES、3DES、AES、RC-5、IDEA")]),v._v(" "),r("p",[v._v("非对称加密技术：数据的加密和解密的密钥是不同的，分为公钥和私钥。是公开密钥加密算法，其缺点是加密速度慢。优点是安全性高，不容易破解")]),v._v(" "),r("p",[v._v("原理：发送数据时，使用接收者的公钥作加密密钥，私钥作解密密钥。但无法保证完整性")]),v._v(" "),r("p",[v._v("常见的非对称加密算法："),r("br"),v._v("\nRSA、Elgamal、ECC、背包算法")]),v._v(" "),r("p",[v._v("数字信封的原理："),r("br"),v._v("\n信是对称加密的密钥，数字信封就是对此密钥进行非对称加密")]),v._v(" "),r("p",[v._v("运用了对称加密技术和非对称加密技术，本质是使用对称密钥加密数据，非对称密钥加密对称密钥，解决了对称密钥的传输问题")]),v._v(" "),r("p",[v._v("信息摘要：就是一段数据的特征信息，当数据发生了改变，信息摘要也会发生改变，发送方会将数据和信息摘要一起传给接收方，接收方会根据接收到的数据重新生成一个信息摘要，两者进行对比，如果一致，那么数据正确。信息摘要是由哈希函数生成的")]),v._v(" "),r("p",[v._v("特点：不管数据多长，都会产生固定长度的信息摘要，任何不同的输入数据，都会产生不同的信息摘要；单向性，即只能由数据生成信息摘要，不能由信息摘要还原数据"),r("br"),v._v("\nMD5、SHA-1")]),v._v(" "),r("p",[v._v("数字签名：唯一标识一个发送方"),r("br"),v._v("\n发送者发送数据时，使用发送者的私钥进行加密，接受者收到数据后，只能使用发送者的公钥进行解密，这样就能唯一确定发送方，这也是数字签名的过程，但无法保证机密性。保障完整性")]),v._v(" "),r("p",[v._v("公钥基础设施PKI：是以不对称加密技术为基础，以数据机密性、完整性、身份认证和行为不可抵赖性为安全目的，来实施和提供安全服务的具有普遍性的"),r("strong",[v._v("安全基础设施")])]),v._v(" "),r("p",[v._v("数字证书：一个数据结构，是一种由一个可信任的权威机构签署的信息集合"),r("br"),v._v("\n签证机构CA：负责签发证书、管理和撤销证书。是所有注册用户所信赖的权威机构，CA在给用户颁发证书时要加上自己的数字签名，以保证证书信息的真实性。")]),v._v(" "),r("p",[v._v("防火墙：内部网络和外部因特网之间增加的一道安全防护措施，分为网络级防火墙和应用级防火墙")]),v._v(" "),r("p",[v._v("网络级防火墙：层次低但效率高"),r("br"),v._v("\n应用级防火墙：层次高但效率低")]),v._v(" "),r("p",[v._v("入侵检测系统IDS")]),v._v(" "),r("p",[v._v("防火墙技术主要是分隔来自外网的威胁，却对内网的直接攻击无能为力，位于防火墙之后的第二道屏障")]),v._v(" "),r("p",[v._v("原理：监控当前系统/用户行为")]),v._v(" "),r("p",[v._v("不同于防火墙，IDS入侵检测系统是一个监听设备，没有跨域在任何链路上，无须网络流量流经它便可以工作。")]),v._v(" "),r("p",[v._v("对IDS部署的唯一要求：IDS应当挂接在所有所关注流量都必须流经的链路上")]),v._v(" "),r("p",[v._v("选择位置：尽可能靠近攻击源、尽可能靠近受保护资源")]),v._v(" "),r("p",[v._v("入侵防御系统IPS：提前发现入侵行为")]),v._v(" "),r("p",[v._v("杀毒软件：用于检测和解决计算机病毒")]),v._v(" "),r("p",[v._v("蜜罐系统：伪造一个蜜罐网络引诱黑客攻击")]),v._v(" "),r("h3",{attrs:{id:"网络攻击和威胁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络攻击和威胁"}},[v._v("#")]),v._v(" 网络攻击和威胁")]),v._v(" "),r("p",[v._v("被动攻击：窃听、业务流分析、非法登录")]),v._v(" "),r("p",[v._v("主动攻击：假冒身份、抵赖、旁路控制、重放攻击、拒绝服务DOS")]),v._v(" "),r("p",[v._v("重放攻击：所截获的某次合法的通信数据拷贝，出于非法的目的而被重新发送"),r("br"),v._v("\n拒绝服务DOS：对信息或其他资源的合法访问被无条件地阻止")]),v._v(" "),r("p",[v._v("计算机病毒和木马")]),v._v(" "),r("p",[v._v("病毒："),r("br"),v._v("\n木马：是一种后门程序")]),v._v(" "),r("p",[v._v("物理层主要使用物理手段隔离屏蔽物理设备等，其他层都是靠协议来保证传输的安全")]),v._v(" "),r("p",[v._v("传输层：TLS"),r("br"),v._v("\n应用层~传输层：SET、SSL"),r("br"),v._v("\n应用层：PGP、HTTP")]),v._v(" "),r("p",[v._v("SSL协议：安全套接字协议，被设计为加强Web安全传输协议，安全性高，和HTTP结合之后，形成HTTPS安全协议，端口号为443"),r("br"),v._v("\nSSH协议：安全外壳协议，被设计为加强Telnet/FTP安全的传输协议"),r("br"),v._v("\nSET协议：安全电子交易协议，应用于B2C中保障支付信息的安全性"),r("br"),v._v("\nKerberos协议：是一种"),r("strong",[v._v("网络身份认证协议")]),v._v("，该协议的基础是基于信息第三方，它提供了在开放型网络中进行身份认证的方法"),r("br"),v._v("\nPGP协议：安全电子邮件协议，使用RSA公钥证书进行身份认证")]),v._v(" "),r("h2",{attrs:{id:"知识产权和标准化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#知识产权和标准化"}},[v._v("#")]),v._v(" 知识产权和标准化")])])}),[],!1,null,null,null);_.default=t.exports}}]);